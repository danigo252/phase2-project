{"ast":null,"code":"var _jsxFileName = \"/Users/danielgonzalez/Development/phase-2/movie-app/src/components/MovieForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newMovie = {\n      title: title\n    };\n    const configObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newMovie)\n    };\n    fetch('http://localhost:3000/movies', configObj).then(res => res.json()).then(data => {\n      console.log(data); // Aquí puedes hacer algo con la respuesta del servidor\n      setTitle(''); // Limpiar el campo de título después de enviar el formulario\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieForm, \"MYNoGbxGn41vHCoLeDH6SYxb4UA=\");\n_c = MovieForm;\nexport default MovieForm;\nvar _c;\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MovieForm","_s","title","setTitle","handleSubmit","e","preventDefault","newMovie","configObj","method","headers","body","JSON","stringify","fetch","then","res","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/danielgonzalez/Development/phase-2/movie-app/src/components/MovieForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction MovieForm() {\n    const [title, setTitle] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const newMovie = {\n            title: title\n        };\n\n        const configObj = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newMovie)\n        };\n\n        fetch('http://localhost:3000/movies', configObj)\n            .then((res) => res.json())\n            .then((data) => {\n                console.log(data); // Aquí puedes hacer algo con la respuesta del servidor\n                setTitle(''); // Limpiar el campo de título después de enviar el formulario\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    };\n\n    return (\n        <div>\n            <h1>Add Movie</h1>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Title:\n                    <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\n                </label>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default MovieForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG;MACbL,KAAK,EAAEA;IACX,CAAC;IAED,MAAMM,SAAS,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;IACjC,CAAC;IAEDO,KAAK,CAAC,8BAA8B,EAAEN,SAAS,CAAC,CAC3CO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;MACnBf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CACDkB,KAAK,CAAEC,KAAK,IAAK;MACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC,CAAC,CAAC;EACV,CAAC;EAED,oBACIvB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB5B,OAAA;MAAM6B,QAAQ,EAAExB,YAAa;MAAAmB,QAAA,gBACzBxB,OAAA;QAAAwB,QAAA,GAAO,QAEH,eAAAxB,OAAA;UAAO8B,IAAI,EAAC,MAAM;UAACC,KAAK,EAAE5B,KAAM;UAAC6B,QAAQ,EAAG1B,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAAC2B,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACR5B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAAC1B,EAAA,CAvCQD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAyClB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}